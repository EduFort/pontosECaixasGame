#include <SFML/Graphics.hpp>
#include <iostream>

int modeWalk(bool Bool, int coord){

	if(Bool) {
		return coord - 1;
	}else {
		return coord + 1;
	}
}

int main()


{
    // Cria a janela

    sf::RenderWindow window(sf::VideoMode(400, 300), "Bola Branca - SFML");



    // Cria a "bola" (um c√≠rculo)

    sf::CircleShape circle(30.0f); // raio de 50 pixels

    circle.setFillColor(sf::Color::White);
    int x=170, y=120;
    circle.setPosition(x, y); // centraliza aproximadamente (janela 400x300)



    // Loop principal
    sf::Clock fpsClock;
    window.setFramerateLimit(100);
    bool touchBordX=0;
    bool touchBordY=0;
    while (window.isOpen())

    {

    	//float currentTime = fpsClock.restart().asSeconds();
    	//float fps = 1.0f / (currentTime);

    	//std::cout << "fps: "<< fps << std::endl;

        sf::Event event;

        while (window.pollEvent(event))

        {

            if (event.type == sf::Event::Closed)

                window.close();

        }

        /*if(x<=370 && y<=270){
        	circle.setPosition(x++, y++);
        } else if( x>400 && y<300){
        	circle.setPosition(x--, y++);
        }else if( x<400 && y>300 ){
        	circle.setPosition(x++, y--);
        }else if( x>400 && y>300 ){
        	circle.setPosition(x--, y--);
        }*/
        if(x==340){
        	touchBordX=1;
        }
        if(x==0){
        	touchBordX=0;
        }
        if(y==240){
        	touchBordY=1;
         }
        if(y==0){
        	 touchBordY=0;
         }



        circle.setPosition(modeWalk(touchBordX, x), modeWalk(touchBordY, y));


        std::cout << x << std::endl;

        window.clear(sf::Color::Blue); // fundo preto

        window.draw(circle);

        window.display();

    }



    return 0;

}
